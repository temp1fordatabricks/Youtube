{
  "model": "llama-3-sonar-large-32k-chat",
  "messages": [
    {
      "role": "system",
      "content": "You are a YouTube title generator."
    },
    {
      "role": "user",
      "content": "Generate a title for a video with this transcript: Hi friends, welcome to Azure Data Factory video series. This is part 14. In this video, we are going to discuss about self-hosted integration runtime in Azure Data Factory. So the main agenda is to discuss about self-hosted integration runtime. I will strongly recommend to watch my previous video that is part 12 in which I have discussed about integration runtime in Azure Data Factory. This video gives a detailed idea of what is actually integration runtime. Let's go to presentation. So firstly, what is integration runtime? In one line, what I can say is integration runtime actually referred by Azure Data Factory to perform is data integration capabilities. So when I say data integration capabilities, all the data movement activities and also all the data transformation activities. If you want to perform these capabilities using Azure Data Factory, then Azure Data Factory has to use this integration runtime. And you can perform these activities within the public network or you can perform outside the public network. That is any private network also on pre-minute work or Azure Virtual Networks, okay? You can do that. But to do that, the cross-communication between public and private network or to implement these capabilities in private network in such cases, you need to go with self-hosted integration runtime. The Azure provided default integration runtime will not support for private networks, okay? So you need to go with self-hosted integration runtime. So as I said, this self-hosted integration runtime is capable of performing these data movement activities between cloud storages and also in private network, so between these two. And also running with transform activities against the compute resources, which are in your on-premises or in your Azure Virtual Networks. So you can do this. Let's go to next slide where I have this beautiful diagram, which will explain you how actually it works. We are concerned about self-hosted. You can see this particular section and also this section here. So here what we are saying is, if your resources belong to Azure Virtual Network in that case and you want to perform the data movement activities or if you want to perform the compute activities, then go with self-integration runtime, which is capable enough to do these activities inside your Azure Virtual Network. Similarly, let's assume if you want to perform the same data movement or compute activities in the resources, which are in cloud and also in private network, the resources below dotted line belongs to private network. So in such cases, you have to go to self-hosted integration runtime. You can see this self-hosted integration runtime here actually marked below these dotted lines. That means you have to install this self-hosted integration runtime within your on-premises network or in the private network. Okay. So if you go to this slide here, I have saying this same point, self-hosted integration runtime needs to be installed on on-premise mission or you can install it in a virtual mission inside your private network. And then you can configure that self-hosted IR to Azure Data Factory. Don't worry how to do this practically because in my next video, I am going to show you practically. So how to create this self-hosted IR and what is the software to install on the on-premise on-premises mission and how to refer that inside the data factory. All these items we are going to see in our next video. This is a quick overview video of self-hosted integration runtime. Okay. Hope you liked this video. Thank you for watching. Please subscribe to my channel and press bell icon to get notifications whenever I add videos. Thank you."
    }
  ]
}